version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: meal_planner_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"  # External port 5455, internal 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - meal_planner_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: meal_planner_backend
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app  # For development hot-reload
    networks:
      - meal_planner_network
    command: python -m flask run --host=0.0.0.0 --port=5000 --reload

volumes:
  postgres_data:
    driver: local

networks:
  meal_planner_network:
    driver: bridge
