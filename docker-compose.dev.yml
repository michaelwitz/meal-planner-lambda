services:
  db:
    image: postgres:15-alpine
    container_name: meal_planner_dev_db
    environment:
      POSTGRES_DB: ${DEV_POSTGRES_DB}
      POSTGRES_USER: ${DEV_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DEV_POSTGRES_PASSWORD}
    ports:
      - "${DEV_POSTGRES_PORT}:5432"  # External port 5455, internal 5432
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DEV_POSTGRES_USER} -d ${DEV_POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - meal_planner_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: meal_planner_backend_dev
    ports:
      - "8088:8088"
    env_file:
      - .env
    environment:
      DEV_DATABASE_URL: postgresql://${DEV_POSTGRES_USER}:${DEV_POSTGRES_PASSWORD}@db:5432/${DEV_POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app  # For development hot-reload
    networks:
      - meal_planner_network
    command: python -m flask run --host=0.0.0.0 --port=8088 --reload

volumes:
  dev_postgres_data:
    driver: local

networks:
  meal_planner_network:
    driver: bridge
